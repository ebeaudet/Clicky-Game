{"version":3,"sources":["components/Rockers/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["Rockers","props","react_default","a","createElement","className","alt","name","src","image","id","onClick","shuffleCards","Wrapper","children","Header","message","style","backgroundColor","App","state","rockGods","idsClicked","score","winningscore","messsage","_this","console","log","includes","setState","alert","push","length","status","i","j","temp","Math","floor","random","_this2","this","components_Wrapper","components_Header","textAlign","color","map","rockgod","components_Rockers","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"i6BAaeA,MAVf,SAAiBC,GACf,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,GAAIT,EAAMS,GAAIC,QAAS,kBAAMV,EAAMW,aAAaX,EAAMS,KAAKL,UAAU,qBCAtGQ,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,wBCIxBC,MALjB,SAAgBd,GAEb,OAAMC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASW,QAASf,EAAMe,QAASC,MAAO,CAACC,gBAAiB,SAAUjB,EAAMa,WCsEnFK,oNAnEbC,MAAQ,CACNC,WACAC,WAAY,GACZC,MAAO,EACPC,aAAc,GACdC,SAAU,MAGZb,aAAe,SAACF,GACd,IAAIY,EAAaI,EAAKN,MAAME,WAG5B,GAFAK,QAAQC,IAAI,gBAERN,EAAWO,SAASnB,GAKtB,OAJAgB,EAAKI,SAAS,CACZR,WAAY,GAAIC,MAAO,SAEzBQ,MAAM,4CAMR,GAHET,EAAWU,KAAKtB,GAGdY,EAAWW,SAAWP,EAAKN,MAAMC,SAASY,OAK5C,OAJAP,EAAKI,SAAS,CACZP,MAAO,EAAGD,WAAY,UAExBS,MAAM,iCAIRL,EAAKI,SAAS,CAAET,WAAUC,aAAYC,MAAOD,EAAWW,OAAQC,OAAQ,MACxE,IAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAO,KAEzB,IAAKF,EAAId,EAASY,OAAS,EAAGE,EAAI,EAAGA,GAAK,EACxCC,EAAIE,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCE,EAAOhB,EAASc,GAChBd,EAASc,GAAKd,EAASe,GACvBf,EAASe,GAAKC,2EAKT,IAAAI,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,KACE1C,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAAE4B,UAAW,WAAvB,qBACA3C,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAAE4B,UAAW,WAAvB,2DACA3C,EAAAC,EAAAC,cAAA,KAAGa,MAAO,CAAE4B,UAAW,WAAvB,gEACA3C,EAAAC,EAAAC,cAAA,MAAIa,MAAO,CAAE4B,UAAW,WAAxB,UAA4CH,KAAKtB,MAAMG,MAAvD,qBAAgFmB,KAAKtB,MAAMI,cAC3FtB,EAAAC,EAAAC,cAAA,MAAIa,MAAO,CAAE4B,UAAW,SAAUC,MAAO,QAAUJ,KAAKtB,MAAMJ,UAG/D0B,KAAKtB,MAAMC,SAAS0B,IAAI,SAAAC,GAAO,OAC9B9C,EAAAC,EAAAC,cAAC6C,EAAD,CACErC,aAAc6B,EAAK7B,aACnBF,GAAIsC,EAAQtC,GACZwC,IAAKF,EAAQtC,GACbD,MAAOuC,EAAQvC,kBA3DT0C,oBCFlBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1ae2bacf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Rockers(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} id={props.id} onClick={() => props.shuffleCards(props.id)} className=\"clicked\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rockers;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props){\r\n\r\n   return<div className=\"header\" message={props.message} style={{backgroundColor: \"gray\"}}>{props.children}</div>;\r\n} \r\n  \r\n  export default Header;","import React, { Component } from \"react\";\r\nimport Rockers from \"./components/Rockers\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport rockGods from \"./rockGods.json\";\r\nimport Header from \"./components/Header\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    rockGods,\r\n    idsClicked: [],\r\n    score: 0,\r\n    winningscore: 12,\r\n    messsage: \"\",\r\n  };\r\n\r\n  shuffleCards = (id) => {\r\n    let idsClicked = this.state.idsClicked;\r\n    console.log(\"Clicked IT!!\")\r\n\r\n    if (idsClicked.includes(id)) {\r\n      this.setState({\r\n        idsClicked: [], score: 0\r\n      })\r\n      alert(\"You broke a string! Click to play again!\")\r\n      return\r\n    } else {\r\n      idsClicked.push(id);\r\n    }\r\n\r\n    if (idsClicked.length === this.state.rockGods.length) {\r\n      this.setState({\r\n        score: 0, idsClicked: []\r\n      })\r\n      alert(\"Rock on!!! You're a Winner!!!\")\r\n      return\r\n    }\r\n\r\n    this.setState({ rockGods, idsClicked, score: idsClicked.length, status: \" \" });\r\n    var i = 0, j = 0, temp = null\r\n\r\n    for (i = rockGods.length - 1; i > 0; i -= 1) {\r\n      j = Math.floor(Math.random() * (i + 1))\r\n      temp = rockGods[i]\r\n      rockGods[i] = rockGods[j]\r\n      rockGods[j] = temp\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Header>\r\n          <p style={{ textAlign: \"center\" }}>Test Your Memory?</p>\r\n          <p style={{ textAlign: \"center\" }}>Try and get 12 points by clicking each image only once.</p>\r\n          <p style={{ textAlign: \"center\" }}>Be careful because the images will shuffle after each click.</p>\r\n          <h2 style={{ textAlign: \"center\" }}>Score: {this.state.score} | Score to meet: {this.state.winningscore}</h2>\r\n          <h3 style={{ textAlign: \"center\", color: \"red\" }}>{this.state.message}</h3>\r\n        </Header>\r\n\r\n        {this.state.rockGods.map(rockgod => (\r\n          <Rockers\r\n            shuffleCards={this.shuffleCards}\r\n            id={rockgod.id}\r\n            key={rockgod.id}\r\n            image={rockgod.image}\r\n          />\r\n        ))}\r\n\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}